import{_ as e,p as n,q as s,a1 as a}from"./framework-1bc831b6.js";const o={},t=a(`<h1 id="bot-异常" tabindex="-1"><a class="header-anchor" href="#bot-异常" aria-hidden="true">#</a> Bot 异常</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在查看此部分内容前，你应当已经阅读文档中的“进阶”部分</p></div><p>在 MeloBot 中，要使用 Bot 内定义的一些异常，可以导入：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> utils<span class="token punctuation">.</span>globalPattern <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这些异常都会以 <code>Bot...</code> 开头。当然你也可以继承 <code>BotException</code> 基类，进行新异常的定义。</p><p>需要注意的是，这些异常都会携带两个属性，它们拥有不同的含义（为了方便不同情境下的操作）：</p><ul><li><code>err</code>：人性化异常提示，包含类名</li><li><code>origin_err</code>：不包含类名的异常提示</li></ul><p>另外，在这些异常中，<code>BotCmdWrongParams</code> 异常在命令模板中有特别的用法。你可以在命令模板中抛出这个异常，表示当前命令的参数存在问题，此时这个抛出的异常会被命令接口捕获，命令接口会根据你设置的提示语，自动生成一条回复消息，作为命令执行失败的反馈。例如下面的例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 命令模板中：</span>
<span class="token keyword">raise</span> BotCmdWrongParams<span class="token punctuation">(</span><span class="token string">&quot;天气查询命令参数中的城市不存在&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 最后将自动回复消息：</span>
天气查询命令参数中的城市不存在
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，这里手动抛出 <code>BotCmdWrongParams</code> 异常可以实现自定义错误反馈的效果。但是如果是命令模板执行时，因为参数不足或者参数类型错误而自动抛出 TypeError 或 ValueError，此时的反馈是不可自定义的。命令接口会自动捕获这两种异常，并且只回复：“参数有误哦~”</p>`,10),c=[t];function i(r,d){return n(),s("div",null,c)}const l=e(o,[["render",i],["__file","exceptions.html.vue"]]);export{l as default};
